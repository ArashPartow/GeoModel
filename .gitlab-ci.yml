stages:
  - deps-geomodelcore
  - deps-CLHEP
  - deps-geomodelio
  - deps-Geant4
  - deps-geomodelg4
  - deps-json
  - deps-geomodeltools
  - deps-geomodeldatamanagers
  - build


variables:
  CMAKE_BASE_ARGS: -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install
  GIT_SUBMODULE_STRATEGY: recursive


# TEMPLATES FOR BUILDING ON DIFFERENT PLATFORMS
.macos-template-job: &macos-job
  tags:
    - macos
  allow_failure: true
  timeout: 30 minutes
  before_script:
    - export PATH="/usr/local/opt/qt/bin:$PATH" # to make Qt5 discoverable by CMake

.ubuntu-template-job: &ubuntu-job
  image: ubuntu:18.04
  tags:
    - docker
  before_script:
  - apt-get update -qq && apt-get install -y -qq git cmake wget unzip build-essential freeglut3-dev libboost-all-dev qt5-default mercurial libeigen3-dev


.geomodelcore-build-template-job: &geomodelcore-job
  stage: deps-geomodelcore
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://gitlab.cern.ch/GeoModelDev/GeoModelCore.git
    - mkdir geomodelcore-build
    - cd geomodelcore-build
    - cmake ${CMAKE_ARGS} ../GeoModelCore
    - make -j32
    - make install
  artifacts:
    paths:
      - install

.CLHEP-build-template-job: &CLHEP-job
  stage: deps-CLHEP
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://gitlab.cern.ch/CLHEP/CLHEP.git
    - cd CLHEP
    - git checkout CLHEP_2_4_1_0
    - cd ../
    - mkdir CLHEP-build
    - cd CLHEP-build
    - cmake ${CMAKE_ARGS} ../CLHEP
    - make -j32
    - make install
  artifacts:
    paths:
      - install

.geomodelio-build-template-job: &geomodelio-job
  stage: deps-geomodelio
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://gitlab.cern.ch/GeoModelDev/GeoModelIO.git
    - cd GeoModelIO
    - git checkout master-specialshape-geomodelg4
    - cd ../
    - mkdir geomodelio-build
    - cd geomodelio-build
    - cmake ${CMAKE_ARGS} ../GeoModelIO
    - make -j32
    - make install
  artifacts:
    paths:
      - install

.Geant4-build-template-job: &Geant4-job
  stage: deps-Geant4
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://gitlab.cern.ch/geant4/geant4.git
    - cd geant4
    - git checkout tags/v10.6.0
    - cd ../
    - mkdir Geant4-build
    - cd Geant4-build
    - cmake ${CMAKE_ARGS} ../geant4
    - make -j32
    - make install
  artifacts:
    paths:
      - install

.geomodelg4-build-template: &geomodelg4-job
  stage: deps-geomodelg4
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://gitlab.cern.ch/GeoModelDev/GeoModelG4.git
    - mkdir GeoModelG4-build
    - cd GeoModelG4-build
    - cmake ${CMAKE_ARGS} ../GeoModelG4
    - make -j32
    - make install
  artifacts:
    paths:
      - install

.json-build-template: &json-job
  stage: deps-json
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://github.com/nlohmann/json.git
    - mkdir json-build
    - cd json-build
    - cmake ${CMAKE_ARGS} ../json
    - make -j32
    - make install
  artifacts:
    paths:
      - install

.geomodeltools-build-template: &geomodeltools-job
  stage: deps-geomodeltools
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://gitlab.cern.ch/GeoModelDev/GeoModelTools
    - mkdir geomodeltools-build
    - cd geomodeltools-build
    - cmake ${CMAKE_ARGS} ../GeoModelTools
    - make -j32
    - make install
  artifacts:
    paths:
      - install


.geomodeldatamanagers-build-template: &geomodeldatamanagers-job
  stage: deps-geomodeldatamanagers
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - pwd; ls
    - git clone https://gitlab.cern.ch/GeoModelATLAS/GeoModelDataManagers
    - mkdir GeoModeldDataManagers-build
    - cd GeoModeldDataManagers-build
    - cmake ${CMAKE_ARGS} ../GeoModeldDataManagers
    - make -j32
    - make install
  artifacts:
    paths:
      - install

.fullsimlight-build-template: &fullsimlight-job
  stage: build
  variables:
    CMAKE_ARGS: ${CMAKE_BASE_ARGS}
  script:
    - echo "PWD; LS"
    - pwd; ls
    - mkdir build
    - cd build
    - cmake ${CMAKE_ARGS} ..
    - cmake --build . -- -j32
    - cmake --build . -- install

# ACTUAL JOBS

### MACOS PATH
geomodelcore-mac:
  <<: *macos-job
  <<: *geomodelcore-job

CLHEP-mac:
  <<: *macos-job
  <<: *CLHEP-job

geomodelio-mac:
  <<: *macos-job
  <<: *geomodelio-job
  needs: ["geomodelcore-mac", "CLHEP-mac"]

Geant4-mac:
  <<: *macos-job
  <<: *Geant4-job
  needs: ["CLHEP-mac"]

geomodelg4-mac:
  <<: *macos-job
  <<: *geomodelg4-job
  needs: ["geomodelcore-mac", "geomodelio-mac", "CLHEP-mac", "Geant4-mac"]

json-mac:
  <<: *macos-job
  <<: *json-job

geomodeltools-mac:
  <<: *macos-job
  <<: *geomodeltools-job
  needs: ["json-mac", "geomodelcore-mac",  "geomodelio-mac" ]

geomodeldatamanagers-mac:
  <<: *macos-job
  <<: *geomodeldatamanagers-job
  needs: ["geomodelcore-mac", "geomodeltools-mac"]

fullsimlight-mac:
  <<: *macos-job
  <<: *fullsimlight-job
  needs: ["geomodelcore-mac", "geomodelio-mac", "CLHEP-mac", "Geant4-mac", "geomodelg4-mac", "geomodeldatamanagers-mac","geomodeltools-mac"]



### UBUNTU PATH
geomodelcore-ubuntu:
  <<: *ubuntu-job
  <<: *geomodelcore-job

CLHEP-ubuntu:
  <<: *ubuntu-job
  <<: *CLHEP-job

geomodelio-ubuntu:
  <<: *ubuntu-job
  <<: *geomodelio-job
  needs: ["geomodelcore-ubuntu", "CLHEP-ubuntu"]

Geant4-ubuntu:
  <<: *ubuntu-job
  <<: *Geant4-job
  needs: ["CLHEP-ubuntu"]

geomodelg4-ubuntu:
  <<: *ubuntu-job
  <<: *geomodelg4-job
  needs: ["geomodelcore-ubuntu", "geomodelio-ubuntu", "CLHEP-ubuntu", "Geant4-ubuntu"]
 
json-ubuntu:
  <<: *ubuntu-job
  <<: *json-job

geomodeltools-ubuntu:
  <<: *ubuntu-job
  <<: *geomodeltools-job
  needs: ["json-ubuntu", "geomodelcore-ubuntu",  "geomodelio-ubuntu"]

geomodeldatamanagers-ubuntu:
  <<: *ubuntu-job
  <<: *geomodeldatamanagers-job
  needs: ["geomodelcore-ubuntu", "geomodeltools-ubuntu"]

fullsimlight-ubuntu:
  <<: *ubuntu-job
  <<: *fullsimlight-job
  needs: ["geomodelcore-ubuntu", "geomodelio-ubuntu", "CLHEP-ubuntu", "Geant4-ubuntu", "geomodelg4-ubuntu", "geomodeldatamanagers-ubuntu", "geomodeltools-ubuntu"]
